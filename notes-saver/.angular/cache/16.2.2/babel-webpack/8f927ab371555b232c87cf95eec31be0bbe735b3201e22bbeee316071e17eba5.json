{"ast":null,"code":"var _class;\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../product.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegistrationComponent_label_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 17);\n    i0.ɵɵtext(1, \"Already exist\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass RegistrationComponent {\n  get email() {\n    return this.Registration.get('email');\n  }\n  get firstname() {\n    return this.Registration.get('firstname');\n  }\n  get lastname() {\n    return this.Registration.get('lastname');\n  }\n  get password() {\n    return this.Registration.get('password');\n  }\n  get confirmPassword() {\n    return this.Registration.get('confirmPassword');\n  }\n  constructor(product, router) {\n    this.product = product;\n    this.router = router;\n    this.Registration = new FormGroup({\n      email: new FormControl('', Validators.required),\n      firstname: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      confirmPassword: new FormControl('', Validators.required)\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  register() {\n    this.product.getlogin(this.Registration.value.email).subscribe(result => {\n      console.warn(result);\n      this.r = result;\n      if (result == null) {\n        this.product.postregister(this.Registration.value).subscribe(result => {\n          console.warn(result);\n          this.r = result;\n          this.router.navigate(['login']);\n        });\n      } else {\n        this.error = true;\n      }\n    });\n  }\n}\n_class = RegistrationComponent;\n_class.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-registration\"]],\n  decls: 36,\n  vars: 3,\n  consts: [[1, \"form-bg\"], [1, \"container\"], [1, \"row\"], [1, \"fixed-header\"], [1, \"form-container\"], [1, \"title\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"firstname\", \"id\", \"firstname\", \"name\", \"firstname\", \"formControlName\", \"firstname\", 1, \"form-control\"], [\"type\", \"lastname\", \"id\", \"lastname\", \"name\", \"lastname\", \"formControlName\", \"lastname\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"pattern\", \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"name\", \"confirmPassword\", \"pattern\", \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\", \"formControlName\", \"confirmPassword\", 1, \"form-control\"], [1, \"btn\", \"signin\", 3, \"disabled\"], [1, \"user-login\"], [\"href\", \"login\"], [2, \"color\", \"red\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h3\", 5);\n      i0.ɵɵtext(6, \"User Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, RegistrationComponent_label_7_Template, 2, 0, \"label\", 6);\n      i0.ɵɵelementStart(8, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\");\n      i0.ɵɵtext(11, \"Email ID*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\");\n      i0.ɵɵtext(16, \"First Name*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 8)(19, \"label\");\n      i0.ɵɵtext(20, \"Last Name*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\");\n      i0.ɵɵtext(24, \"Password*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 8)(27, \"label\");\n      i0.ɵɵtext(28, \"Confirm Password*\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 14);\n      i0.ɵɵtext(31, \"Create Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"span\", 15);\n      i0.ɵɵtext(33, \"Already Have an Account? Click Here to \");\n      i0.ɵɵelementStart(34, \"a\", 16);\n      i0.ɵɵtext(35, \"Login\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.Registration);\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"disabled\", ctx.Registration.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.PatternValidator, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n});\nexport { RegistrationComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegistrationComponent","email","Registration","get","firstname","lastname","password","confirmPassword","constructor","product","router","required","error","ngOnInit","register","getlogin","value","subscribe","result","console","warn","r","postregister","navigate","ɵɵdirectiveInject","i1","ProductService","i2","Router","selectors","decls","vars","consts","template","RegistrationComponent_Template","rf","ctx","ɵɵtemplate","RegistrationComponent_label_7_Template","ɵɵlistener","RegistrationComponent_Template_form_ngSubmit_8_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","invalid"],"sources":["C:\\Users\\simranarora\\Desktop\\Desktop\\New folder\\mini_assignment\\notes-saver\\src\\app\\registration\\registration.component.ts","C:\\Users\\simranarora\\Desktop\\Desktop\\New folder\\mini_assignment\\notes-saver\\src\\app\\registration\\registration.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../product.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  Registration = new FormGroup({\n    email: new FormControl('', Validators.required),\n    firstname: new FormControl('', Validators.required),\n    lastname: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n    confirmPassword: new FormControl('', Validators.required)\n  })\n  error = false\n\n  get email() { return this.Registration.get('email') }\n  get firstname() { return this.Registration.get('firstname') }\n  get lastname() { return this.Registration.get('lastname') }\n  get password() { return this.Registration.get('password') }\n  get confirmPassword() { return this.Registration.get('confirmPassword') }\n\n\n\n  constructor(private product: ProductService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  r: any\n\n  register() {\n\n\n    this.product.getlogin(this.Registration.value.email).subscribe((result) => {\n      console.warn(result)\n      this.r = result\n\n      if (result == null) {\n\n        this.product.postregister(this.Registration.value).subscribe((result) => {\n          console.warn(result)\n          this.r = result\n          this.router.navigate(['login']);\n\n        })\n\n      }\n      else {\n\n        this.error = true\n\n      }\n\n    })\n  }\n}","<div class=\"form-bg\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"fixed-header\" >\n                <div class=\"form-container\">\n                    <h3 class=\"title\">User Registration</h3>\n                    <label *ngIf=\"error\" style=\"color: red;\">Already exist</label>\n                    <form [formGroup]=\"Registration\" (ngSubmit)=\"register()\"  class=\"form-horizontal\">\n                        \n                        <div class=\"form-group\">\n                            <label>Email ID*</label>\n                            <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\" formControlName=\"email\">\n                        </div><br>\n                        <div class=\"form-group\">\n                            <label>First Name*</label>\n                            <input class=\"form-control\" type=\"firstname\" id=\"firstname\" name=\"firstname\" formControlName=\"firstname\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Last Name*</label>\n                            <input class=\"form-control\" type=\"lastname\" id=\"lastname\" name=\"lastname\" formControlName=\"lastname\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Password*</label>\n                            <input class=\"form-control\" type=\"password\" id=\"password\" name=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" formControlName=\"password\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Confirm Password*</label>\n                            <input class=\"form-control\" type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" formControlName=\"confirmPassword\">\n                        </div>\n                        \n                        <button class=\"btn signin\" [disabled]=\"Registration.invalid\" >Create Account</button>\n                        <span class=\"user-login\">Already Have an Account? Click Here to <a href=\"login\">Login</a></span>\n                    </form>\n                   \n                </div>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}