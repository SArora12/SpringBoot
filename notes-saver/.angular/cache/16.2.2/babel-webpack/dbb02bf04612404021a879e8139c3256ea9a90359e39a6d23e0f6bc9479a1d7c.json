{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass AuthService {\n  constructor() {\n    this.loggedIn = false;\n  }\n  login() {\n    this.loggedIn = true;\n  }\n  logOut() {\n    this.loggedIn = false;\n  }\n  IsAuthenticated() {\n    return this.loggedIn;\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","loggedIn","login","logOut","IsAuthenticated","factory","ɵfac","providedIn"],"sources":["C:\\Users\\simranarora\\Desktop\\Desktop\\New folder\\mini_assignment\\notes-saver\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  loggedIn:boolean=false;\n  login(){\n    this.loggedIn=true;\n  }\n  logOut(){\n    this.loggedIn=false;\n  }\n  IsAuthenticated(){\n    return this.loggedIn;\n  }\n}\n"],"mappings":";;AAIA,MAGaA,WAAW;EAHxBC,YAAA;IAIE,KAAAC,QAAQ,GAAS,KAAK;;EACtBC,KAAKA,CAAA;IACH,IAAI,CAACD,QAAQ,GAAC,IAAI;EACpB;EACAE,MAAMA,CAAA;IACJ,IAAI,CAACF,QAAQ,GAAC,KAAK;EACrB;EACAG,eAAeA,CAAA;IACb,OAAO,IAAI,CAACH,QAAQ;EACtB;;SAVWF,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAM,OAAA,EAAXN,MAAW,CAAAO,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}