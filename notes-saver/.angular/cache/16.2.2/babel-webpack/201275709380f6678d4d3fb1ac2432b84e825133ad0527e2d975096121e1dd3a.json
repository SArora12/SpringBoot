{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegistrationComponent = class RegistrationComponent {\n  get email() {\n    return this.Registration.get('email');\n  }\n  get firstname() {\n    return this.Registration.get('firstname');\n  }\n  get lastname() {\n    return this.Registration.get('lastname');\n  }\n  get password() {\n    return this.Registration.get('password');\n  }\n  get confirmPassword() {\n    return this.Registration.get('confirmPassword');\n  }\n  constructor(product, router) {\n    this.product = product;\n    this.router = router;\n    this.Registration = new FormGroup({\n      email: new FormControl('', Validators.required),\n      firstname: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      confirmPassword: new FormControl('', Validators.required)\n    });\n    this.error = false;\n  }\n  ngOnInit() {}\n  register() {\n    this.product.getlogin(this.Registration.value.email).subscribe(result => {\n      console.warn(result);\n      this.r = result;\n      if (result == null) {\n        this.product.postregister(this.Registration.value).subscribe(result => {\n          console.warn(result);\n          this.r = result;\n          this.router.navigate(['login']);\n        });\n      } else {\n        this.error = true;\n      }\n    });\n  }\n};\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})], RegistrationComponent);\nexport { RegistrationComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","RegistrationComponent","email","Registration","get","firstname","lastname","password","confirmPassword","constructor","product","router","required","error","ngOnInit","register","getlogin","value","subscribe","result","console","warn","r","postregister","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\simranarora\\Desktop\\Desktop\\New folder\\mini_assignment\\notes-saver\\src\\app\\registration\\registration.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../product.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  Registration = new FormGroup({\n    email: new FormControl('', Validators.required),\n    firstname: new FormControl('', Validators.required),\n    lastname: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required),\n    confirmPassword: new FormControl('', Validators.required)\n  })\n  error = false\n\n  get email() { return this.Registration.get('email') }\n  get firstname() { return this.Registration.get('firstname') }\n  get lastname() { return this.Registration.get('lastname') }\n  get password() { return this.Registration.get('password') }\n  get confirmPassword() { return this.Registration.get('confirmPassword') }\n\n\n\n  constructor(private product: ProductService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  r: any\n\n  register() {\n\n\n    this.product.getlogin(this.Registration.value.email).subscribe((result) => {\n      console.warn(result)\n      this.r = result\n\n      if (result == null) {\n\n        this.product.postregister(this.Registration.value).subscribe((result) => {\n          console.warn(result)\n          this.r = result\n          this.router.navigate(['login']);\n\n        })\n\n      }\n      else {\n\n        this.error = true\n\n      }\n\n    })\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AASnE,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAWhC,IAAIC,KAAKA,CAAA;IAAK,OAAO,IAAI,CAACC,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC;EAAC;EACpD,IAAIC,SAASA,CAAA;IAAK,OAAO,IAAI,CAACF,YAAY,CAACC,GAAG,CAAC,WAAW,CAAC;EAAC;EAC5D,IAAIE,QAAQA,CAAA;IAAK,OAAO,IAAI,CAACH,YAAY,CAACC,GAAG,CAAC,UAAU,CAAC;EAAC;EAC1D,IAAIG,QAAQA,CAAA;IAAK,OAAO,IAAI,CAACJ,YAAY,CAACC,GAAG,CAAC,UAAU,CAAC;EAAC;EAC1D,IAAII,eAAeA,CAAA;IAAK,OAAO,IAAI,CAACL,YAAY,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAAC;EAIxEK,YAAoBC,OAAuB,EAAUC,MAAc;IAA/C,KAAAD,OAAO,GAAPA,OAAO;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAjB3D,KAAAR,YAAY,GAAG,IAAIJ,SAAS,CAAC;MAC3BG,KAAK,EAAE,IAAIJ,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACY,QAAQ,CAAC;MAC/CP,SAAS,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACY,QAAQ,CAAC;MACnDN,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACY,QAAQ,CAAC;MAClDL,QAAQ,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACY,QAAQ,CAAC;MAClDJ,eAAe,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAEE,UAAU,CAACY,QAAQ;KACzD,CAAC;IACF,KAAAC,KAAK,GAAG,KAAK;EAU0D;EAEvEC,QAAQA,CAAA,GACR;EAGAC,QAAQA,CAAA;IAGN,IAAI,CAACL,OAAO,CAACM,QAAQ,CAAC,IAAI,CAACb,YAAY,CAACc,KAAK,CAACf,KAAK,CAAC,CAACgB,SAAS,CAAEC,MAAM,IAAI;MACxEC,OAAO,CAACC,IAAI,CAACF,MAAM,CAAC;MACpB,IAAI,CAACG,CAAC,GAAGH,MAAM;MAEf,IAAIA,MAAM,IAAI,IAAI,EAAE;QAElB,IAAI,CAACT,OAAO,CAACa,YAAY,CAAC,IAAI,CAACpB,YAAY,CAACc,KAAK,CAAC,CAACC,SAAS,CAAEC,MAAM,IAAI;UACtEC,OAAO,CAACC,IAAI,CAACF,MAAM,CAAC;UACpB,IAAI,CAACG,CAAC,GAAGH,MAAM;UACf,IAAI,CAACR,MAAM,CAACa,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAEjC,CAAC,CAAC;OAEH,MACI;QAEH,IAAI,CAACX,KAAK,GAAG,IAAI;;IAIrB,CAAC,CAAC;EACJ;CACD;AAlDYZ,qBAAqB,GAAAwB,UAAA,EALjC5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW3B,qBAAqB,CAkDjC;SAlDYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}