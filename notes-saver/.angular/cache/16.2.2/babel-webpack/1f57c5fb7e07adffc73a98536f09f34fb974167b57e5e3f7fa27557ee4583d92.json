{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nclass notesGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.authService.IsAuthenticated()) {\n      return true;\n    } else {\n      this.router.navigate(['']);\n      return false;\n    }\n  }\n}\n_class = notesGuard;\n_class.ɵfac = function notesGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});\nexport { notesGuard };","map":{"version":3,"names":["notesGuard","constructor","authService","router","canActivate","route","state","IsAuthenticated","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac"],"sources":["C:\\Users\\simranarora\\Desktop\\Desktop\\New folder\\mini_assignment\\notes-saver\\src\\app\\notesGuard.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateFn, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n\r\n@Injectable()\r\nexport class notesGuard implements CanActivate{\r\n\r\n    constructor(private authService:AuthService,private router:Router) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean  {\r\n     if(this.authService.IsAuthenticated()){\r\n        return true;\r\n     }\r\n     else{\r\n        this.router.navigate(['']);\r\n        return false;\r\n     }\r\n    }\r\n  }"],"mappings":";;;;AAKA,MACaA,UAAU;EAEnBC,YAAoBC,WAAuB,EAASC,MAAa;IAA7C,KAAAD,WAAW,GAAXA,WAAW;IAAqB,KAAAC,MAAM,GAANA,MAAM;EAAW;EACrEC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACpE,IAAG,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAC;MACnC,OAAO,IAAI;KACb,MACG;MACD,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B,OAAO,KAAK;;EAEhB;;SAXSR,UAAU;;mBAAVA,MAAU,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAVd,MAAU;EAAAe,OAAA,EAAVf,MAAU,CAAAgB;AAAA;SAAVhB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}