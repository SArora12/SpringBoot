{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ProductService {\n  constructor(http) {\n    this.http = http;\n    this.url = \"http://localhost:9092/\";\n  }\n  getlogin(email) {\n    return this.http.get(this.url + \"users/\" + email);\n  }\n  postregister(data) {\n    return this.http.post(this.url + \"users\", data);\n  }\n  postnote(data) {\n    return this.http.post(this.url + \"notes\", data);\n  }\n  getNotes(id) {\n    return this.http.get(this.url + \"notes\" + id);\n  }\n  postApprovedReview(data) {\n    return this.http.post(this.url + \"acceptReview\", data);\n  }\n  postReview(data) {\n    return this.http.post(this.url + \"reviews\", data);\n  }\n  getProducts() {\n    return this.http.get(this.url + \"products\");\n  }\n  getApprovedReview() {\n    return this.http.get(this.url + \"askreview/\");\n  }\n  deleteApprovedReview(id) {\n    return this.http.delete(this.url + \"denyReview/\" + id);\n  }\n  getReview(id) {\n    return this.http.get(this.url + \"review/id/\" + id);\n  }\n  getUserCount() {\n    return this.http.get(this.url + \"users/count\");\n  }\n  getReviewCount() {\n    return this.http.get(this.url + \"review/count\");\n  }\n  getProductCount() {\n    return this.http.get(this.url + \"products/count\");\n  }\n  getCode(code) {\n    return this.http.get(this.url + \"products/code/\" + code);\n  }\n  getPrice(price) {\n    return this.http.get(this.url + \"products/price/\" + price);\n  }\n  getName(name) {\n    return this.http.get(this.url + \"products/name/\" + name);\n  }\n  getBrand(brand) {\n    return this.http.get(this.url + \"products/brand/\" + brand);\n  }\n  getID(id) {\n    return this.http.get(this.url + \"products/id/\" + id);\n  }\n}\n_class = ProductService;\n_class.ɵfac = function ProductService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { ProductService };","map":{"version":3,"names":["ProductService","constructor","http","url","getlogin","email","get","postregister","data","post","postnote","getNotes","id","postApprovedReview","postReview","getProducts","getApprovedReview","deleteApprovedReview","delete","getReview","getUserCount","getReviewCount","getProductCount","getCode","code","getPrice","price","getName","name","getBrand","brand","getID","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\simranarora\\Desktop\\Desktop\\New folder\\mini_assignment\\notes-saver\\src\\app\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  \n\n  url=\"http://localhost:9092/\"\n\n  constructor(private http:HttpClient) { }\n\n  getlogin(email: any)\n  {\n    return this.http.get(this.url+\"users/\"+email);\n\n  }\n\n  postregister(data: any)\n  {\n    return this.http.post(this.url+\"users\",data);\n\n  }\n  postnote(data: any)\n  {\n    return this.http.post(this.url+\"notes\",data);\n\n  }\n  getNotes(id:any)\n  {\n    return this.http.get(this.url+\"notes\"+id);\n\n  }\n  postApprovedReview(data: any)\n  {\n    return this.http.post(this.url+\"acceptReview\",data);\n\n  }\n  postReview(data: any)\n  {\n    return this.http.post(this.url+\"reviews\",data);\n\n  }\n\n  getProducts()\n  {\n    return this.http.get(this.url+\"products\");\n\n  }\n  getApprovedReview(){\n\n    return this.http.get(this.url+\"askreview/\");\n  }\n  deleteApprovedReview(id:any){\n    return this.http.delete(this.url+\"denyReview/\"+id)\n  }\n  getReview(id: any){\n\n    return this.http.get(this.url+\"review/id/\"+id);\n  }\n  getUserCount()\n  {\n    return this.http.get(this.url+\"users/count\");\n\n  }\n  getReviewCount()\n  {\n    return this.http.get(this.url+\"review/count\");\n\n  }\n  getProductCount()\n  {\n    return this.http.get(this.url+\"products/count\");\n\n  }\n  getCode(code: any)\n  {\n    return this.http.get(this.url+\"products/code/\"+code);\n  }\n\n  getPrice(price: any)\n  {\n    return this.http.get(this.url+\"products/price/\"+price);\n  }\n\n  getName(name: any)\n  {\n    return this.http.get(this.url+\"products/name/\"+name);\n  }\n\n  getBrand(brand: any)\n  {\n    return this.http.get(this.url+\"products/brand/\"+brand);\n  }\n\n  getID(id: any)\n  {\n    return this.http.get(this.url+\"products/id/\"+id);\n  }\n\n  \n  \n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}